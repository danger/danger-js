import { DangerResults } from "../../dsl/DangerResults"
import { Violation } from "../../dsl/Violation"

export const noEntryEmoji = "\u274C"
export const warningEmoji = "⚠️"
export const messageEmoji = "\u2728"
export const signatureEmoji = "\u1F6AB"

export const dangerIDToString = (id: string) => `danger-id-${id};`
export const fileLineToString = (file: string, line: number) => `  File: ${file};Line: ${line};`

/**
 * Comment to add when updating the PR status when issues are found
 */
export const messageForResultWithIssues = `${warningEmoji}  Danger found some issues. Don't worry, everything is fixable.`

export function inlineTemplate(dangerID: string, results: DangerResults, file: string, line: number): string {
  const printViolation = (defaultEmoji: string) => (violation: Violation) => {
    return `- ${violation.icon || defaultEmoji} ${violation.message}`
  }

  return `
[//]: # (${dangerIDToString(dangerID)})
[//]: # (${fileLineToString(file, line)})
${results.fails.map(printViolation(noEntryEmoji)).join("\n")}
${results.warnings.map(printViolation(warningEmoji)).join("\n")}
${results.messages.map(printViolation(messageEmoji)).join("\n")}
${results.markdowns.map(v => v.message).join("\n\n")}
  `
}

export const dangerSignature = (results: DangerResults, icon: string) => {
  let meta = results.meta || { runtimeName: "dangerJS", runtimeHref: "https://danger.systems/js" }
  return `Generated by ${icon} [${meta.runtimeName}](${meta.runtimeHref})`
}
