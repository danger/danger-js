{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "BitBucketServerCommit": {
            "description": "A BitBucketServer specific implementation of a git commit.",
            "properties": {
                "author": {
                    "description": "The author of the commit, assumed to be the person who wrote the code.",
                    "properties": {
                        "displayName": {
                            "description": "The display name of the commit author",
                            "type": "string"
                        },
                        "emailAddress": {
                            "description": "The email of the commit author",
                            "type": "string"
                        },
                        "name": {
                            "description": "The id of the commit author",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "authorTimestamp": {
                    "description": "The UNIX timestamp for when the commit was authored",
                    "type": "number"
                },
                "committer": {
                    "description": "The author of the commit, assumed to be the person who commited/merged the code into a project.",
                    "properties": {
                        "displayName": {
                            "description": "The display name of the commit committer",
                            "type": "string"
                        },
                        "emailAddress": {
                            "description": "The email of the commit committer",
                            "type": "string"
                        },
                        "name": {
                            "description": "The id of the commit committer",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "committerTimestamp": {
                    "description": "When the commit was committed to the project",
                    "type": "number"
                },
                "displayId": {
                    "description": "The shortened SHA for the commit",
                    "type": "string"
                },
                "id": {
                    "description": "The SHA for the commit",
                    "type": "string"
                },
                "message": {
                    "description": "The commit's message",
                    "type": "string"
                },
                "parents": {
                    "description": "The commit's parents",
                    "items": {
                        "properties": {
                            "displayId": {
                                "description": "The simplified sha",
                                "type": "string"
                            },
                            "id": {
                                "description": "The full SHA",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BitBucketServerJSONDSL": {
            "properties": {
                "activities": {
                    "description": "The activities such as OPENING, CLOSING, MERGING or UPDATING a pull request",
                    "items": {
                        "$ref": "#/definitions/BitBucketServerPRActivity"
                    },
                    "type": "array"
                },
                "comments": {
                    "description": "The comments on the pull request",
                    "items": {
                        "$ref": "#/definitions/BitBucketServerPRActivity"
                    },
                    "type": "array"
                },
                "commits": {
                    "description": "The commits associated with the pull request",
                    "items": {
                        "$ref": "#/definitions/BitBucketServerCommit"
                    },
                    "type": "array"
                },
                "issues": {
                    "description": "The related JIRA issues",
                    "items": {
                        "$ref": "#/definitions/JIRAIssue"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "#/definitions/RepoMetaData",
                    "description": "The pull request and repository metadata"
                },
                "pr": {
                    "$ref": "#/definitions/BitBucketServerPRDSL",
                    "description": "The PR metadata"
                }
            },
            "type": "object"
        },
        "BitBucketServerLinks": {
            "enum": [
                "clone",
                "self"
            ],
            "type": "string"
        },
        "BitBucketServerMergeRef": {
            "properties": {
                "displayId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latestCommit": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/BitBucketServerRepo"
                }
            },
            "type": "object"
        },
        "BitBucketServerPRActivity": {
            "properties": {
                "action": {
                    "enum": [
                        "COMMENTED",
                        "DECLINED",
                        "MERGED",
                        "OPENED",
                        "UPDATED"
                    ],
                    "type": "string"
                },
                "comment": {
                    "$ref": "#/definitions/BitBucketServerPRComment"
                },
                "commentAction": {
                    "enum": [
                        "ADDED",
                        "UPDATED"
                    ],
                    "type": "string"
                },
                "commentAnchor": {
                    "properties": {
                        "diffType": {
                            "enum": [
                                "COMMIT",
                                "EFFECTIVE",
                                "RANGE",
                                "REQUIRED"
                            ],
                            "type": "string"
                        },
                        "fileType": {
                            "enum": [
                                "FROM",
                                "TO"
                            ],
                            "type": "string"
                        },
                        "fromHash": {
                            "type": "string"
                        },
                        "line": {
                            "type": "number"
                        },
                        "lineType": {
                            "enum": [
                                "ADDED",
                                "CONTEXT",
                                "REMOVED"
                            ],
                            "type": "string"
                        },
                        "path": {
                            "type": "string"
                        },
                        "srcPath": {
                            "type": "string"
                        },
                        "toHash": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "createdDate": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "user": {
                    "$ref": "#/definitions/BitBucketServerUser"
                }
            },
            "type": "object"
        },
        "BitBucketServerPRComment": {
            "properties": {
                "author": {
                    "$ref": "#/definitions/BitBucketServerUser"
                },
                "comments": {
                    "items": {
                        "$ref": "#/definitions/BitBucketServerPRActivity"
                    },
                    "type": "array"
                },
                "createdDate": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "parent": {
                    "properties": {
                        "id": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "permittedOperations": {
                    "properties": {
                        "deletable": {
                            "type": "boolean"
                        },
                        "editable": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "text": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "number"
                },
                "version": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BitBucketServerPRDSL": {
            "description": "An exact copy of the PR's reference JSON. This interface has type'd the majority\nof it for tooling's sake, but any extra metadata which BitBucket Server send\nwill still be inside the JS object.",
            "properties": {
                "author": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/BitBucketServerPRParticipant"
                        },
                        {
                            "properties": {
                                "role": {
                                    "enum": [
                                        "AUTHOR"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "The creator of the PR"
                },
                "closed": {
                    "description": "Is the PR closed?",
                    "type": "boolean"
                },
                "createdDate": {
                    "description": "Date PR created as number of milliseconds since the unix epoch",
                    "type": "number"
                },
                "description": {
                    "description": "The text describing the PR",
                    "type": "string"
                },
                "fromRef": {
                    "$ref": "#/definitions/BitBucketServerMergeRef",
                    "description": "The PR submitter's reference"
                },
                "id": {
                    "description": "The PR's ID",
                    "type": "number"
                },
                "links": {
                    "description": "Misc links for hypermedia conformance",
                    "enum": [
                        "self"
                    ],
                    "type": "string"
                },
                "locked": {
                    "description": "Was this PR locked?",
                    "type": "boolean"
                },
                "open": {
                    "description": "Is the PR open?",
                    "type": "boolean"
                },
                "participants": {
                    "description": "People who have participated in the PR",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/BitBucketServerPRParticipant"
                            },
                            {
                                "properties": {
                                    "role": {
                                        "enum": [
                                            "PARTICIPANT"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "type": "array"
                },
                "reviewers": {
                    "description": "People requested as reviewers",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/BitBucketServerPRParticipant"
                            },
                            {
                                "properties": {
                                    "role": {
                                        "enum": [
                                            "REVIEWER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "type": "array"
                },
                "state": {
                    "description": "The pull request's current status.",
                    "enum": [
                        "DECLINED",
                        "MERGED",
                        "OPEN",
                        "SUPERSEDED"
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "Title of the pull request.",
                    "type": "string"
                },
                "toRef": {
                    "$ref": "#/definitions/BitBucketServerMergeRef",
                    "description": "The repo Danger is running on"
                },
                "updatedDate": {
                    "description": "Date PR updated as number of milliseconds since the unix epoch",
                    "type": "number"
                },
                "version": {
                    "description": "The API version",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BitBucketServerPRParticipant": {
            "properties": {
                "approved": {
                    "description": "Did they approve of the PR?",
                    "type": "boolean"
                },
                "role": {
                    "description": "How did they contribute",
                    "enum": [
                        "AUTHOR",
                        "PARTICIPANT",
                        "REVIEWER"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "Their review feedback",
                    "enum": [
                        "APPROVED",
                        "NEEDS_WORK",
                        "UNAPPROVED"
                    ],
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/BitBucketServerUser"
                }
            },
            "type": "object"
        },
        "BitBucketServerRepo": {
            "description": "A BitBucket Server Repo",
            "properties": {
                "forkable": {
                    "description": "Can someone fork this repo?",
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/BitBucketServerLinks",
                    "description": "Links for the projects"
                },
                "name": {
                    "description": "The repo name",
                    "type": "string"
                },
                "project": {
                    "description": "An abstraction for grouping repos",
                    "properties": {
                        "id": {
                            "description": "The project unique id",
                            "type": "number"
                        },
                        "key": {
                            "description": "The project's human readable project key",
                            "type": "string"
                        },
                        "links": {
                            "description": "Hyperlinks for the project",
                            "enum": [
                                "self"
                            ],
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the project",
                            "type": "string"
                        },
                        "public": {
                            "description": "Is the project publicly available",
                            "type": "boolean"
                        },
                        "type": {
                            "description": "The project's type",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "public": {
                    "description": "Is the repo public?",
                    "type": "boolean"
                },
                "scmId": {
                    "description": "The type of SCM tool, probably \"git\"",
                    "type": "string"
                },
                "slug": {
                    "description": "The slug for the repo",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BitBucketServerUser": {
            "description": "A BitBucketServer user account.",
            "properties": {
                "active": {
                    "description": "Is the account active",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The name to use when referencing the user",
                    "type": "string"
                },
                "emailAddress": {
                    "description": "The email for the user",
                    "type": "string"
                },
                "id": {
                    "description": "The unique user ID",
                    "type": "number"
                },
                "name": {
                    "description": "The name of the user",
                    "type": "string"
                },
                "slug": {
                    "description": "The user's slug for URLs",
                    "type": "string"
                },
                "type": {
                    "description": "The type of a user, \"NORMAL\" being a typical user3",
                    "enum": [
                        "NORMAL",
                        "SERVICE"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CliArgs": {
            "description": "Describes the possible arguments that\ncould be used when calling the CLI",
            "properties": {
                "base": {
                    "description": "The base reference used by danger PR (e.g. not master)",
                    "type": "string"
                },
                "dangerfile": {
                    "description": "A custom path for the dangerfile (can also be a remote reference)",
                    "type": "string"
                },
                "externalCiProvider": {
                    "description": "Used by danger-js o allow having a custom CI",
                    "type": "string"
                },
                "id": {
                    "description": "So you can have many danger runs in one code review",
                    "type": "string"
                },
                "textOnly": {
                    "description": "Use SDTOUT instead of posting to the code review side",
                    "type": "string"
                },
                "verbose": {
                    "description": "For debugging",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DangerDSLJSONType": {
            "description": "The root of the Danger JSON DSL.",
            "properties": {
                "bitbucket_server": {
                    "$ref": "#/definitions/BitBucketServerJSONDSL",
                    "description": "The data only version of BitBucket Server DSL"
                },
                "git": {
                    "$ref": "#/definitions/GitJSONDSL",
                    "description": "The data only version of Git DSL"
                },
                "github": {
                    "$ref": "#/definitions/GitHubDSL",
                    "description": "The data only version of GitHub DSL"
                },
                "settings": {
                    "description": "Used in the Danger JSON DSL to pass metadata between\nprocesses. It will be undefined when used inside the Danger DSL",
                    "properties": {
                        "cliArgs": {
                            "$ref": "#/definitions/CliArgs",
                            "description": "This is still a bit of a WIP, but this should\npass args/opts from the original CLI call through\nto the process."
                        },
                        "github": {
                            "description": "Saves each client re-implementing logic to grab these vars\nfor their API clients",
                            "properties": {
                                "accessToken": {
                                    "description": "API token for the GitHub client to use",
                                    "type": "string"
                                },
                                "additionalHeaders": {
                                    "description": "Optional headers to add to a request"
                                },
                                "baseURL": {
                                    "description": "Optional URL for enterprise GitHub",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GitCommit": {
            "description": "A platform agnostic reference to a Git commit",
            "properties": {
                "author": {
                    "$ref": "#/definitions/GitCommitAuthor",
                    "description": "Who wrote the commit"
                },
                "committer": {
                    "$ref": "#/definitions/GitCommitAuthor",
                    "description": "Who deployed the commit"
                },
                "message": {
                    "description": "The commit message",
                    "type": "string"
                },
                "parents": {
                    "description": "SHAs for the commit's parents",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sha": {
                    "description": "The SHA for the commit",
                    "type": "string"
                },
                "tree": {
                    "description": "Potential parent commits, and other assorted metadata"
                },
                "url": {
                    "description": "Link to the commit",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitCommitAuthor": {
            "description": "An author of a commit",
            "properties": {
                "date": {
                    "description": "ISO6801 date string",
                    "type": "string"
                },
                "email": {
                    "description": "The authors email",
                    "type": "string"
                },
                "name": {
                    "description": "The display name for the author",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubAPIPR": {
            "description": "Provides the current PR in an easily used way for params in `github.api` calls",
            "properties": {
                "number": {
                    "description": "The PR number",
                    "type": "number"
                },
                "owner": {
                    "description": "The repo owner",
                    "type": "string"
                },
                "repo": {
                    "description": "The repo name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubCommit": {
            "description": "A GitHub specific implementation of a git commit, it has GitHub user names instead of an email.",
            "properties": {
                "author": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The GitHub user who wrote the code"
                },
                "commit": {
                    "$ref": "#/definitions/GitCommit",
                    "description": "The raw commit metadata"
                },
                "committer": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The GitHub user who shipped the code"
                },
                "parents": {
                    "description": "An array of parent commit shas",
                    "items": {
                    },
                    "type": "array"
                },
                "sha": {
                    "description": "The SHA for the commit",
                    "type": "string"
                },
                "url": {
                    "description": "the url for the commit on GitHub",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubDSL": {
            "description": "The GitHub metadata for your PR",
            "properties": {
                "api": {
                    "$ref": "#/definitions/Github",
                    "description": "An authenticated API so you can extend danger's behavior by using the [GitHub v3 API](https://developer.github.com/v3/).\n\nA set up instance of the \"github\" npm module. You can get the full [API here](https://octokit.github.io/node-github/)."
                },
                "commits": {
                    "description": "The github commit metadata for a code review session",
                    "items": {
                        "$ref": "#/definitions/GitHubCommit"
                    },
                    "type": "array"
                },
                "issue": {
                    "$ref": "#/definitions/GitHubIssue",
                    "description": "The issue metadata for a code review session"
                },
                "pr": {
                    "$ref": "#/definitions/GitHubPRDSL",
                    "description": "The PR metadata for a code review session"
                },
                "requested_reviewers": {
                    "description": "The people requested to review this PR",
                    "items": {
                        "$ref": "#/definitions/GitHubUser"
                    },
                    "type": "array"
                },
                "reviews": {
                    "description": "The reviews left on this pull request",
                    "items": {
                        "$ref": "#/definitions/GitHubReview"
                    },
                    "type": "array"
                },
                "thisPR": {
                    "$ref": "#/definitions/GitHubAPIPR",
                    "description": "The PR metadata specifically formatted for using with the GitHub API client"
                },
                "utils": {
                    "$ref": "#/definitions/GitHubUtilsDSL",
                    "description": "A scope for useful functions related to GitHub"
                }
            },
            "type": "object"
        },
        "GitHubIssue": {
            "description": "This is `danger.github.issue` It refers to the issue that makes up the Pull Request.\nGitHub treats all pull requests as a special type of issue. This DSL contains only parts of the issue that are\nnot found in the PR DSL, however it does contain the full JSON structure.\n\nA GitHub Issue",
            "properties": {
                "labels": {
                    "description": "The labels associated with this issue",
                    "items": {
                        "$ref": "#/definitions/GitHubIssueLabel"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GitHubIssueLabel": {
            "properties": {
                "color": {
                    "description": "The color associated with this label",
                    "type": "string"
                },
                "id": {
                    "description": "The identifying number of this label",
                    "type": "number"
                },
                "name": {
                    "description": "The name of the label",
                    "type": "string"
                },
                "url": {
                    "description": "The URL that links to this label",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubMergeRef": {
            "properties": {
                "label": {
                    "description": "The human display name for the merge reference, e.g. \"artsy:master\"",
                    "type": "string"
                },
                "ref": {
                    "description": "The reference point for the merge, e.g. \"master\"",
                    "type": "string"
                },
                "repo": {
                    "$ref": "#/definitions/GitHubRepo",
                    "description": "The repo from which the reference comes from"
                },
                "sha": {
                    "description": "The reference point for the merge, e.g. \"704dc55988c6996f69b6873c2424be7d1de67bbe\"",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The user that owns the merge reference e.g. \"artsy\""
                }
            },
            "type": "object"
        },
        "GitHubPRDSL": {
            "description": "An exact copy of the PR's reference JSON. This interface has type'd the majority\nof it for tooling's sake, but any extra metadata which GitHub send will still be\ninside the JS object.",
            "properties": {
                "additions": {
                    "description": "The number of additional lines in the PR",
                    "type": "number"
                },
                "assignee": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The User who is assigned the PR"
                },
                "assignees": {
                    "description": "The Users who are assigned to the PR",
                    "items": {
                        "$ref": "#/definitions/GitHubUser"
                    },
                    "type": "array"
                },
                "base": {
                    "$ref": "#/definitions/GitHubMergeRef",
                    "description": "Merge reference for _this_ repo."
                },
                "body": {
                    "description": "The markdown body message of the PR",
                    "type": "string"
                },
                "changed_files": {
                    "description": "The number of changed files in the PR",
                    "type": "number"
                },
                "closed_at": {
                    "description": "optional ISO6801 Date string for when PR was closed",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "comments": {
                    "description": "The number of comments on the PR",
                    "type": "number"
                },
                "commits": {
                    "description": "The number of commits in the PR",
                    "type": "number"
                },
                "created_at": {
                    "description": "ISO6801 Date string for when PR was created",
                    "type": "string"
                },
                "deletions": {
                    "description": "The number of deleted lines in the PR",
                    "type": "number"
                },
                "head": {
                    "$ref": "#/definitions/GitHubMergeRef",
                    "description": "Merge reference for the _other_ repo."
                },
                "html_url": {
                    "description": "The link back to this PR as user-facing",
                    "type": "string"
                },
                "locked": {
                    "description": "Has the PR been locked to contributors only?",
                    "type": "boolean"
                },
                "merged": {
                    "description": "Has the PR been merged yet?",
                    "type": "boolean"
                },
                "merged_at": {
                    "description": "Optional ISO6801 Date string for when PR was merged.\nDanger probably shouldn't be running in this state.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "number": {
                    "description": "The UUID for the PR",
                    "type": "number"
                },
                "review_comments": {
                    "description": "The number of review-specific comments on the PR",
                    "type": "number"
                },
                "state": {
                    "description": "The state for the PR",
                    "enum": [
                        "closed",
                        "locked",
                        "merged",
                        "open"
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "The title of the PR",
                    "type": "string"
                },
                "updated_at": {
                    "description": "ISO6801 Date string for when PR was updated",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The User who submitted the PR"
                }
            },
            "type": "object"
        },
        "GitHubRepo": {
            "description": "A GitHub Repo",
            "properties": {
                "assignee": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "Is someone assigned to this PR?"
                },
                "assignees": {
                    "description": "Are there people assigned to this PR?",
                    "items": {
                        "$ref": "#/definitions/GitHubUser"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The textual description of the repo",
                    "type": "string"
                },
                "fork": {
                    "description": "Is the repo a fork?",
                    "type": "boolean"
                },
                "full_name": {
                    "description": "The full name of the owner + repo, e.g. \"Danger/Danger-JS\"",
                    "type": "string"
                },
                "html_url": {
                    "description": "The root web URL for the repo, e.g. https://github.com/artsy/emission",
                    "type": "string"
                },
                "id": {
                    "description": "Generic UUID",
                    "type": "number"
                },
                "name": {
                    "description": "The name of the repo, e.g. \"Danger-JS\"",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The owner of the repo"
                },
                "private": {
                    "description": "Is the repo publicly accessible?",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GitHubReview": {
            "description": "GitHubReview\nWhile a review is pending, it will only have a user.  Once a review is complete, the rest of\nthe review attributes will be present",
            "properties": {
                "body": {
                    "description": "If there is a review, the body of the review",
                    "type": "string"
                },
                "commit_id": {
                    "description": "If there is a review, the commit ID this review was made on",
                    "type": "string"
                },
                "id": {
                    "description": "If there is a review, this provides the ID for it",
                    "type": "number"
                },
                "state": {
                    "description": "The state of the review\nAPPROVED, REQUEST_CHANGES, COMMENT or PENDING",
                    "enum": [
                        "APPROVED",
                        "COMMENT",
                        "PENDING",
                        "REQUEST_CHANGES"
                    ],
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/GitHubUser",
                    "description": "The user requested to review, or the user who has completed the review"
                }
            },
            "type": "object"
        },
        "GitHubUser": {
            "description": "A GitHub user account.",
            "properties": {
                "avatar_url": {
                    "description": "The url for a users's image",
                    "type": "string"
                },
                "id": {
                    "description": "Generic UUID",
                    "type": "number"
                },
                "login": {
                    "description": "The handle for the user/org",
                    "type": "string"
                },
                "type": {
                    "description": "Whether the user is an org, or a user",
                    "enum": [
                        "Bot",
                        "Organization",
                        "User"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubUtilsDSL": {
            "description": "Useful functions for GitHub related work",
            "properties": {
                "createOrAddLabel": {
                    "description": "An API for creating, or setting a label to an issue. Usable from Peril\nby adding an additional param for settings about a repo.",
                    "type": "object"
                },
                "createOrUpdatePR": {
                    "type": "object"
                },
                "createUpdatedIssueWithID": {
                    "description": "An API for creating, updating and closing an issue. Basically\nthis is really useful for reporting back via a separate\nissue that you may want to keep up to date at all times.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GitJSONDSL": {
            "description": "The Git Related Metadata which is available inside the Danger DSL JSON",
            "properties": {
                "commits": {
                    "description": "The Git commit metadata",
                    "items": {
                        "$ref": "#/definitions/GitCommit"
                    },
                    "type": "array"
                },
                "created_files": {
                    "description": "Newly created filepaths relative to the git root",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deleted_files": {
                    "description": "Removed filepaths relative to the git root",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modified_files": {
                    "description": "Filepaths with changes relative to the git root",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Github": {
            "properties": {
                "activity": {
                    "type": "object"
                },
                "apps": {
                    "type": "object"
                },
                "checks": {
                    "type": "object"
                },
                "codesOfConduct": {
                    "type": "object"
                },
                "emojis": {
                    "type": "object"
                },
                "gists": {
                    "type": "object"
                },
                "git": {
                    "type": "object"
                },
                "gitignore": {
                    "type": "object"
                },
                "hook": {
                    "type": "object"
                },
                "interactions": {
                    "type": "object"
                },
                "issues": {
                    "type": "object"
                },
                "licenses": {
                    "type": "object"
                },
                "markdown": {
                    "type": "object"
                },
                "meta": {
                    "type": "object"
                },
                "migrations": {
                    "type": "object"
                },
                "oauthAuthorizations": {
                    "type": "object"
                },
                "orgs": {
                    "type": "object"
                },
                "projects": {
                    "type": "object"
                },
                "pulls": {
                    "type": "object"
                },
                "rateLimit": {
                    "type": "object"
                },
                "reactions": {
                    "type": "object"
                },
                "repos": {
                    "type": "object"
                },
                "request": {
                },
                "search": {
                    "type": "object"
                },
                "teams": {
                    "type": "object"
                },
                "users": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JIRAIssue": {
            "description": "This is `danger.bitbucket_server.issues` It refers to the issues that are linked to the Pull Request.",
            "properties": {
                "key": {
                    "description": "The unique key for the issue e.g. JRA-11",
                    "type": "string"
                },
                "url": {
                    "description": "The user-facing URL for that issue",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RepoMetaData": {
            "description": "Key details about a repo",
            "properties": {
                "pullRequestID": {
                    "description": "The ID for the pull/merge request \"11\"",
                    "type": "string"
                },
                "repoSlug": {
                    "description": "Project ID \"624\" or a path like \"artsy/eigen\"",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "description": "The shape of the JSON passed between Danger and a subprocess. It's built\nto be expanded in the future.",
    "properties": {
        "danger": {
            "$ref": "#/definitions/DangerDSLJSONType"
        }
    },
    "type": "object"
}

